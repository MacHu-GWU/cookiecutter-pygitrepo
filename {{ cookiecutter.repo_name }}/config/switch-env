#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
run ``chmod +x switch-env`` to set this script executable on Unix.

Switch between different (set current environment to one of dev / test / prod).
It just copy the corresponding json file to ``./config-raw.json``.

Usage:

.. code-block:: bash

    ./switch-env dev
"""

from __future__ import print_function
import os
import shutil
from os.path import join, dirname, abspath


class Style(object):
    RED = "\033[31m"    # for error message
    GREEN = "\033[32m"  # for success message
    CYAN = "\033[36m"   # for information
    RESET = "\033[39m"  # reset to default


here = dirname(abspath(__file__))
dst = join(here, "config-raw.json")


def find_config_file_by_environment(environment):
    """
    suppose environment = "dev", then the first occurrence of a file name end
    with "dev.json" should be the environment specified config file.
    """
    for p_basename in os.listdir(here):
        if p_basename.endswith("{}.json".format(environment)):
            return join(here, p_basename)
    raise EnvironmentError("can't find any config file matches stage `{}`".format(environment))


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "env",
        type=str,
        metavar="env",
        nargs=1,
        help="the environment name you want to switch to",
    )

    args = parser.parse_args()
    args_data = vars(args)

    environment = args_data["env"][0]
    print(Style.CYAN + "switch to environment: " + Style.RESET + "'{}' ... ".format(environment))
    try:
        src = find_config_file_by_environment(environment)
    except EnvironmentError:
        src = None
        print(Style.RED + "unable to find any config file for " + Style.RESET + "'{}'".format(environment))
        exit(1)

    print(Style.CYAN + "copy: " + Style.RESET + src)
    print(Style.CYAN + "   to: " + Style.RESET  + dst)

    shutil.copy(src, dst)

    print(Style.GREEN + "successfully switched to: " + Style.RESET + "'{}'.".format(environment))
